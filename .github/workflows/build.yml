name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# needed for GHCR login with GITHUB_TOKEN
permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # Only build & push on main branch pushes (not PRs) or manual triggers
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'

    strategy:
      matrix:
        edition: ['', '_mono']
        platform: ['linux/amd64', 'linux/arm64', 'linux/386', 'linux/arm/v7']
        include:
          - edition: ''
            suffix: ''
            edition_name: 'standard'
          - edition: '_mono'
            suffix: '-mono'
            edition_name: 'mono'
          # Platform-specific metadata
          - platform: 'linux/amd64'
            platform_tag: 'amd64'
          - platform: 'linux/arm64'
            platform_tag: 'arm64'
          - platform: 'linux/386'
            platform_tag: '386'
          - platform: 'linux/arm/v7'
            platform_tag: 'armv7'

    env:
      # To override the image name, set these secrets in the repo settings
      GHCR_IMAGE: ghcr.io/sharkyrawr/godot-docker
      DOCKERHUB_IMAGE: docker.io/sophiefox/godot-docker
      GODOT_VERSION: 4.5.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_IMAGE }}
            ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            type=raw,value=latest${{ matrix.suffix }}-${{ matrix.platform_tag }}
            type=raw,value=${{ env.GODOT_VERSION }}${{ matrix.suffix }}-${{ matrix.platform_tag }}
          flavor: |
            latest=false

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.GHCR_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ matrix.edition_name }}-${{ matrix.platform_tag }}
          cache-to: type=gha,mode=max,scope=${{ matrix.edition_name }}-${{ matrix.platform_tag }}
          provenance: mode=max
          sbom: true
          build-args: |
            EDITION=${{ matrix.edition }}
            VERSION=${{ env.GODOT_VERSION }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests/${{ matrix.edition_name }}
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${{ matrix.edition_name }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.edition_name }}-${{ matrix.platform_tag }}
          path: /tmp/digests/${{ matrix.edition_name }}/*
          if-no-files-found: error
          retention-days: 1

      # Only attest GHCR since that's what we pushed during build
      - name: Attest build provenance (GHCR)
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.GHCR_IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  merge:
    runs-on: ubuntu-latest
    needs: [build]
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'

    strategy:
      matrix:
        edition: ['', '_mono']
        include:
          - edition: ''
            suffix: ''
            edition_name: 'standard'
          - edition: '_mono'
            suffix: '-mono'
            edition_name: 'mono'

    env:
      GHCR_IMAGE: ghcr.io/sharkyrawr/godot-docker
      DOCKERHUB_IMAGE: docker.io/sophiefox/godot-docker
      GODOT_VERSION: 4.5.1

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests/${{ matrix.edition_name }}
          pattern: digests-${{ matrix.edition_name }}-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_IMAGE }}
            ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            type=raw,value=latest${{ matrix.suffix }}
            type=raw,value=${{ env.GODOT_VERSION }}${{ matrix.suffix }}
            type=raw,value=${{ env.GODOT_VERSION }}-${{ matrix.edition_name }}
            type=ref,event=branch,suffix=${{ matrix.suffix }}
            type=ref,event=pr,suffix=${{ matrix.suffix }}
            type=sha,suffix=${{ matrix.suffix }}
          flavor: |
            latest=false

      - name: Create manifest list and push (GHCR)
        working-directory: /tmp/digests/${{ matrix.edition_name }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_IMAGE }}@sha256:%s ' *)
        env:
          DOCKER_METADATA_OUTPUT_JSON: ${{ steps.meta.outputs.json }}

      - name: Create manifest list and push (Docker Hub)
        working-directory: /tmp/digests/${{ matrix.edition_name }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map(sub("^${{ env.GHCR_IMAGE }}"; "${{ env.DOCKERHUB_IMAGE }}") | "-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_IMAGE }}@sha256:%s ' *)
        env:
          DOCKER_METADATA_OUTPUT_JSON: ${{ steps.meta.outputs.json }}

      - name: Inspect image (GHCR)
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_IMAGE }}:latest${{ matrix.suffix }}

      - name: Inspect image (Docker Hub)
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_IMAGE }}:latest${{ matrix.suffix }}
